name: Deploy DATEX Spec

on:
  push:
    branches:
      - main

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - name: Clean workspace
        run: |
          rm -rf spec-generator
          echo "Workspace cleaned"

      - name: Clone spec-generator repo
        run: |
          git clone --depth 1 https://github.com/unyt-org/spec-generator.git
          cd spec-generator
          echo "Cloned spec-generator repo successfully"

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: spec-generator/package-lock.json

      - name: Install dependencies
        run: |
          cd spec-generator
          npm ci
          echo "Dependencies installed successfully"

      - name: Run spec update script
        run: |
          cd spec-generator
          node update-specs.mjs
          echo "Spec update completed"

      - name: Build documentation
        run: |
          cd spec-generator
          npm run docs:build
          ls -la
          echo "Documentation build completed"

      - name: Verify build output
        run: |
          cd spec-generator
          ls -la docs/.vitepress/dist/
          echo "Build verification successful"
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./spec-generator/docs/.vitepress/dist/
          retention-days: 5
  deploy:
    needs: test-build
    name: Build and Deploy Spec
    runs-on: self-hosted
    
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ./build
      - name: Deploy to server
        run: |
          sudo rm -rf /home/unyt/networks/main/dockers/SPEC/www/*
          sudo cp -rf ./build /home/unyt/networks/main/dockers/SPEC/www
          echo "Successfully deployed"

      - name: Verify deployment
        run: |
            ls -la /home/unyt/networks/main/dockers/SPEC/www
            echo "Deployment completed successfully"
      - name: Cleanup workspace
        run: |
          rm -rf ./build
          echo "Final cleanup completed"
        if: always() 